
&ice_sico_par

!-------- Vertical grid definition --------

    nkc       = 30      ! number of layers in cold ice
    nkt       = 2       ! number of layers in temperate ice, For CALCMOD == -1, 0, 2, 3 the kt domain is redundant, therefore nkt==2 is recommended
    nkr       = 15      ! number of layers in lithosphere


!-------- Include/exclude Tibetan ice sheet in domain --------

    i_tibet = 0
!                         0 : include
!                         1 : exclude

!-------- Initial conditions --------

    i_temp_init = 1
!                         Initial ice temperature conditions
!                         (only for ice_restart==F in nml/control.nml):
!                         1 : Constant value in the entire ice sheet
!                         2 : In each ice column equal to the
!                             local ice surface temperature
!                         3 : Ice temperature linearly increasing with depth
!                         4 : Ice-temperature profiles from analytical solution
!                             for 1-d steady-state advection-diffusion equation
!                             under the assumption of linearly varying vz
!                             [Robin (1955) solution]

    temp_init = -10.
!                         Initial ice temperature (only for i_temp_init==1)

    grid = 0
!                         0 : Cartesian coordinates in the stereographic plane
!                             without distortion correction
!                         1 : Cartesian coordinates in the stereographic plane
!                             with distortion correction
!                         2 : Geographical coordinates (longitude/latitude)
!                             [not allowed for this application]

    deform = 2.0
!                       Exponential stretch parameter of the non-equidistant
!                       grid in z-direction in cold ice
!                       (0.0_wp produces an equidistant grid)

    l_smooth_zl0 = 0    ! smoothing options for zl0
!                         0 : No smoothing
!                         1 : Standard smoothing
!                         2 : Adaptive smoothing

    sigma_filter_zl0 = 40.   ! km, width of filter for litosphere topography smoothing

    s_filter_zl0 = 0.0       ! Parameter for adaptive filtering
                            ! if zero standard (only for zl0)
    zl0_cont = -500.0        ! Parameter for adaptive filtering (only for zl0)

    l_smooth_zl = 0      !   smoothing options for zl
!                         0 : No smoothing
!                         1 : Standard smoothing
!                         2 : Adaptive smoothing

    sigma_filter_zl = 40.   ! km, width of filter for litosphere topography smoothing

    s_filter_zl = 0.0       ! Parameter for adaptive filtering
                            ! if zero standard (only for zl)
    zl_cont = -500.0        ! Parameter for adaptive filtering (only for zl)

!-------- Time steps --------

    dtime = 0.5
!                       Time step (in a) for computation of velocity
!                       and topography

    dtime_temp = 1.
!                       Time step (in a) for computation of
!                       temperature, water content and age of the ice

    dtime_mar_coa = 10.0
!                       Time step (in a) for computation of
!                       auxiliary fields mask_mar, cst_dist and cos_grad_tc
!                       for the ice discharge parameterization
!                       (only for i_disc>0, ice discharge parameterization on)


!-------- Lithosphere (bedrock) modelling --------

    q_litho = 1
!                         0 : No coupled heat-conducting bedrock
!                         1 : Coupled heat-conducting bedrock

!-------- Discretisation of topography gradients --------

    topograd = 1
!                             Topography gradients at grid points with
!                         0 : second-order discretisation
!                         1 : fourth-order discretisation
    gl_surf_grad = 2        ! 1 used by Jorge
!                         Surface gradients at staggered-grid points at the
!                         grounding line (between grounded and floating ice)
!                         (only for MARGIN==3):
!                         1 : central differences
!                         2 : one-sided differences into either grounded or
!                             floating ice
!                             (depending on whether the staggered-grid points
!                             are grounded or floating)

!-------- Ice sheet thermodynamics --------

    calcmod = 3
!                        -1 : ISOT: isothermal method,
!                                   constant temperature and age
!                         0 : COLD: cold-ice method, resetting of temperatures
!                                   above pressure melting
!                         1 : POLY: polythermal method,
!                                   separate domains for cold and temperate ice
!                         2 : ENTC: conventional enthalpy method
!                         3 : ENTM: melting-CTS enthalpy method
!
!                             For CALCMOD == -1, 0, 2, 3,
!                             the kt domain is redundant,
!                             therefore KTMAX==2 is recommended

    cts_melting_freezing = 2
!                         Treatment of the transition conditions at the CTS
!                         (only for POLY; CALCMOD==1):
!                         1 : Melting and freezing conditions distinguished
!                         2 : Always melting conditions assumed

    temp_const = -10.0
    age_const  = 0.0
!                         Prescribed temperature and age
!                         (only for ISOT; CALCMOD==-1)

!-------- Ice sheet dynamics --------

    dynamics = 2
!                         0 : Ice flow velocity set to zero everywhere
!                             (static ice)
!                         1 : SIA for grounded ice,
!                             SSA for floating ice (if existing)
!                         2 : SIA for grounded ice,
!                             SIA/SStA hybrid for ice streams,
!                             SSA for floating ice (if existing)

    hyb_mode = 1
!                         Combination of SIA and SSA velocities based on (only for DYNAMICS==2):
!                         0 : Slip ratio of grounded ice
!                         1 : Sum of weighted non-sliding SIA and full SSA velocities.

    lis_opts = '-i bicgsafe -maxiter 1000 -tol 1.0e-03 -p jacobi -initx_zeros false'
!                         Options string for the Lis solver for the SSA/SStA
!                         (see the Lis User Guide, www.ssisc.org/lis)
!                         (for DYNAMICS==1 and MARGIN==3, or for DYNAMICS==2)

    tol_iter_ssa = 0.025
!                         Tolerance for the nonlinear iterations of the SSA/SStA
!                         (for DYNAMICS==1 and MARGIN==3, or for DYNAMICS==2).

    iter_init_ssa = 2
!                         Initial depth-integrated viscosity for the
!                         nonlinear iterations of the SSA/SStA:
!                         1 : Constant VISC_INIT_SSA times ice thickness
!                         2 : Previous depth-averaged viscosity times
!                             ice thickness
!                         3 : Computation by subroutine calc_vis_ssa
!                             (that is always used for the further iterations)
!                         (for DYNAMICS==1 and MARGIN==3, or for DYNAMICS==2).


    n_iter_ssa = 20
!                         Number of iterations for the relaxation scheme
!                         of the SSA/SStA
!                         (for DYNAMICS==1 and MARGIN==3, or for DYNAMICS==2).

    ratio_sl_thresh = 0.5
!                         Threshold value for the slip ratio of grounded ice.
!                         If the slip ratio is larger, ice stream dynamics
!                         is employed (for DYNAMICS==2 and HYB_MODE==0).

    relax_fact_ssa = 0.7
!                         Relaxation factor for the relaxation scheme
!                         of the SSA/SStA
!                         (for DYNAMICS==1 and MARGIN==3, or for DYNAMICS==2).

    ssta_sia_weigh_fct = 2
!                         SStA-SIA weighing factor as a function of the
!                         slip ratio (for DYNAMICS==2 and HYB_MODE==0):
!                         0 : Linear function (continuous transitions)
!                         1 : Cubic function (smooth transitions)
!                         2 : Quintic function (even smoother transitions)

    hyb_ref_speed = 30.0
!                         Scaling reference speed for Bueler2009-type method
!                         (in m/y, only for DYNAMICS==2, HYB_MOD==1).

!-------- advance of shelf ice front (only for margin=3) --------

    i_advance = 0

!                         0 : No control of ice margin migration
!                         1 : Special control of ice margin
!                             migration (under development)

!-------- Evolution of the ice thickness --------

    thk_evol = 1
!                         0 : No evolution of the ice thickness, kept fixed on
!                             the initial thickness
!                         1 : Evolution of the ice thickness
!                         2 : Evolution of the ice thickness, but between times
!                             time_target_topo_init and time_target_topo_final
!                             the ice topography (zs, zb, zl, H) is gradually
!                             adjusted in order to reach a prescribed target
!                             at time time_target_topo_final.
!                         3 : Evolution of the ice thickness, but the
!                             ice topography (zs, zb, zl, H) is adjusted
!                             towards a prescribed target with the
!                             relaxation time target_topo_tau.
!                         4 : Evolution of the ice thickness,
!                             but maximum ice extent is constrained by the
!                             prescribed mask maske_maxextent(j,i).

    calcthk = 4
!                         Solution of the ice-thickness equation:
!                         1 : Explicit scheme for the diffusive
!                             SIA ice-surface equation
!                         2 : Over-implicit scheme for the diffusive
!                             SIA ice-surface equation,
!                             iterative built-in SOR solver
!                         3 : Over-implicit scheme for the diffusive
!                             SIA ice-surface equation,
!                             iterative library-based (Lis) solver
!                         4 : Explicit scheme for the general
!                             ice-thickness equation
!                         5 : Over-implicit scheme for the general
!                             ice-thickness equation,
!                             iterative built-in SOR solver
!                         6 : Over-implicit scheme for the general
!                             ice-thickness equation,
!                             iterative library-based (Lis) solver

    ovi_weight = 1.5
!                       Weighing parameter for the over-implicit scheme
!                       (only for calcthk==2, 3, 5, 6)

    omega_sor = 1.0
!                       Relaxation parameter for the iterative SOR solver
!                       for systems of linear equations
!                       (0 < omega_sor < 2, only for calcthk==2, 5)

    mean_accum = 3.0e02
!                       Mean accumulation rate over modelled ice sheet
!                       (in mm water equiv./a)
!                       [Only required in case of CALCTHK==2, 5 for
!                       the convergence criterion of the SOR method.
!                       Need not be very precise, a rough estimate is
!                       sufficient.]

    time_target_topo_init = 0.0
!                             Initial time for target-topography adjustment
!                             (in a; only for thk_evol==2)

    time_target_topo_final = 0.0
!                             Final time for target-topography adjustment
!                             (in a; only for thk_evol==2)

    target_topo_tau = 100.0
!                             Relaxation time for the evolution of the
!                             ice topography towards a prescribed target
!                             (in a; only for thk_evol==3)

    target_topo_file = 'input/'
!                             target-topography file (only for thk_evol==2, 3)


    mask_maxextent_file = "input/LGM_mask_climberx.nc"
!                             maximum ice extent mask file (only for thk_evol==4)


!-------- Ice margin treatment --------

    ice_control = 1
!   experimental parameter (eventually remove later)
!                         0 : Ice in ocean is free
!                         1 : Isolated ice in ocean inhibited

    margin = 3
!                         1 : Ice extent strictly restricted to land area
!                         2 : Formation of marine ice possible
!                         3 : Formation of marine ice and ice shelves possible

    marine_ice_formation = 2
!                         1 : No special mechanism for the formation of marine ice
!                             (only for MARGIN==2)
!                         2 : Formation of marine ice via "underwater ice"
!                             (only for MARGIN==2)

    marine_ice_calving = 2
!                         1 : Unlimited expansion of marine ice, no calving law applies
!                             (only for MARGIN==2)
!                         2 : Limited expansion of marine ice,
!                             constant value z_mar=Z_MAR for the minimum elevation
!                             of the isostatically relaxed bedrock
!                             (only for MARGIN==2)
!                         3 : Limited expansion of marine ice,
!                             constant value z_mar=Z_MAR for the minimum bedrock
!                             elevation (only for MARGIN==2)
!                         4 : Limited expansion of marine ice,
!                             minimum elevation of the isostatically relaxed bedrock
!                             z_mar proportional to sea-level stand
!                             (only for MARGIN==2)
!                         5 : Limited expansion of marine ice,
!                             minimum bedrock elevation z_mar proportional to
!                             sea-level stand (only for MARGIN==2)
!                         6 : Limited expansion of marine ice,
!                             minimum elevation of the isostatically relaxed bedrock
!                             z_mar related to sea-level stand by the piecewise
!                             linear relation proposed by Zweck and Huybrechts (2005)
!                             (only for MARGIN==2)
!                         7 : Limited expansion of marine ice,
!                             minimum bedrock elevation z_mar related to sea-level
!                             stand by the piecewise linear relation proposed by
!                             Zweck and Huybrechts (2005) (only for MARGIN==2)
!                         9 : Calving of marine ice by calving law for
!                             "underwater ice"
!                             (only for MARGIN==2 and MARINE_ICE_FORMATION==2)

    z_mar = -500.0
!                         Minimum elevation (in m) of the isostatically relaxed
!                         bedrock allowed to glaciate
!                         (for MARGIN==2 and MARINE_ICE_CALVING==2)
!                         Minimum bedrock elevation (in m) allowed to glaciate
!                         (for MARGIN==2 and MARINE_ICE_CALVING==3)

    fact_z_mar = 2.5      ! suitable value for margin==2 and marine_ice_calving==4,5 
!                         Minimum bedrock elevation or
!                         minimum elevation of the isostatically relaxed bedrock
!                         allowed to glaciate:
!                         proportionality factor to sea-level stand
!                         (for MARGIN==2 and MARINE_ICE_CALVING==4,5),
!                         modification factor for the piecewise linear
!                         relation by Zweck and Huybrechts (2005)
!                         (for MARGIN==2 and MARINE_ICE_CALVING==6,7)

    calv_uw_coeff = 1.0e-04
!                         Calving coefficient for "underwater ice",
!                         in m^(1-r1-r2)*a^(-1) (for MARGIN==2,
!                         MARINE_ICE_FORMATION==2 and MARINE_ICE_CALVING==9)

    r1_calv_uw = 1.0
!                         Exponent r1 of the ice thickness
!                         for the calving law for "underwater ice"
!                         (for MARGIN==2,
!                         MARINE_ICE_FORMATION==2 and MARINE_ICE_CALVING==9)

    r2_calv_uw = 1.0
!                         Exponent r2 of the sea depth
!                         for the calving law for "underwater ice"
!                         (for MARGIN==2,
!                         MARINE_ICE_FORMATION==2 and MARINE_ICE_CALVING==9)

    ice_shelf_calving = 3
!                         1 : Unlimited expansion of ice shelves, no calving
!                             (only for MARGIN==3)
!                         2 : Instantaneous calving of ice shelves if the
!                             thickness is less than H_CALV (only for MARGIN==3)
!                         3 : Calving of ice shelves with attenuation if the
!                             thickness is less than H_CALV (only for MARGIN==3)
!                         4 : Float-kill: all floating ice points changed to
!                             sea points (only for MARGIN==3)

    h_calv_deep = 500.0
    h_calv_shallow = 50.0
!                         Threshold thicknesses (in m) of ice shelves for calving
!                         differing between deep and shallow ocean,
!                         linear interpolation inbetween
!                         (for MARGIN==3 and ICE_SHELF_CALVING==2,3)
    zl_deep    = -1000.0
    zl_shallow = -200.0
!                         Values for deep and shallow ocean used by
!                         Calving thresholds.

    tau_calv = 10.0
!                         Calving attenuation parameter
!                         (in a only for ice_shelf_calving==3)

!-------- Ice discharge parameterization --------

    i_disc = 2
!                         0 : Ice discharge parameterization off
!                         1 : Ice discharge parameterization on
!                         2 : Ice discharge parameterization on, but only applied to Greenland

    c_dis_bm = 0.002 !6000. 
!                         Discharge parameter: small scale basal melt 
!                         (only for i_disc>0)

    c_dis_clv = 0.02 !600.
!                         Discharge parameter: small scale calving
!                         (only for i_disc>0)

    alpha_tc = 60.0 
!                         Discharge parameter: maximal allowed angle
!                         (only for i_disc>0)

    ii_disc = 3 !2
!                         1 : old 
!                         2 : new

    zl_std_crit_disc = 300.
!                         Discharge parameter: critical surface roughness (in m)
!                         (only for i_disc>0)

    m_H = 1.0
!                         Power of thickness
!                         (only for i_disc>0)

    m_D = 3.0
!                         Power of distance
!                         (only for i_disc>0)

    m_R = 0.    !1.5
!                         Power of distance
!                         (only for i_disc>0)

    m_T = 2.0
!                         Power of temperature
!                         (only for i_disc>0)

    tau_dmb = 30.0       
!                         time scale for discharge parameterisation (years)

    r_mar_eff = 500.0
!                         Width of ice marginal ring (in km)
!                         (only for i_disc>0)

    i_dist_coast = 3
!                         method to define distance to coast
!                         (only for i_disc>0)
!                         1 : brute force distance to ocean
!                         2 : distance to ocean from successively enlarged square
!                         3 : distance to ocean or floating ice from successively enlarged square

    dist_coast_min = 0.
!                         minimum distance to coast (in km)
!                         (used only if i_disc>0)

!-------- Flow law --------

    flow_law = 1 
!                         1 : Glen's flow law with stress exponent n=3
!                         2 : Goldsby-Kohlstedt flow law with stress exponent
!                             n=1.8 and grain-size exponent p=1.4
!                         3 : Durham's flow law with stress exponent n=4
!                         4 : Smith-Morland (polynomial) flow law

    fin_visc = 2
!                         1 : Unmodified flow law with infinite viscosity
!                             for low strain rates
!                             (only for FLOW_LAW==1, 2, 3)
!                         2 : Modified flow law with additional
!                             finite-viscosity parameter SIGMA_RES
!                             (only for FLOW_LAW==1, 2, 3)

!-------- Flow enhancement factor --------

    enhmod = 1
!                         1 : Flow enhancement factor enh=ENH_FACT everywhere
!                             in grounded ice
!                         2 : enh=ENH_INTG for ice younger than AGE_TRANS_0
!                             (Holocene ice),
!                             enh=ENH_FACT for ice older than AGE_TRANS_0
!                             (Pleistocene ice);
!                             for present-day steady-state simulations
!                         3 : enh=ENH_INTG for Holocene and Eemian ice,
!                             enh=ENH_FACT for Weichselian and pre-Eemian ice
!                             (as defined by the times DATE_TRANS1_0,
!                             DATE_TRANS2_0 and DATE_TRANS3_0);
!                             for transient scenarios
!                         4 : Anisotropic flow enhancement factor (quadratic
!                             function of the shear fraction) for grounded ice,
!                             between ENH_COMPR (for compression) and
!                             ENH_SHEAR (for shear)
!                         5 : Anisotropic flow enhancement factor (quadratic
!                             function of the shear fraction) for grounded and
!                             floating ice,
!                             between ENH_COMPR (for compression) and
!                             ENH_SHEAR (for shear)

    enh_fact = 3.0        ! could be increased to ~9?
!                         Flow enhancement factor (only for ENHMOD==1, 2, 3)

    enh_intg = 1.0
!                         Separate flow enhancement factor for interglacial ice
!                         (only for ENHMOD==2, 3)

    age_trans_0 = 11000.0
!                         Age of the Holocene/Pleistocene transition
!                         (in a; only for ENHMOD==2)

    date_trans1_0 = -132000.0
!                         Time of the pre-Eemian/Eemian transition
!                         (in a; only for ENHMOD==3)

    date_trans2_0 = -114500.0
!                         Time of the Eemian/Weichselian transition
!                         (in a; only for ENHMOD==3)

    date_trans3_0 = -11000.0
!                         Time of the Weichselian/Holocene transition
!                         (in a; only for ENHMOD==3)

    enh_compr = 3.0
!                         Flow enhancement factor for compression
!                         (only for ENHMOD==4, 5)

    enh_shear = 8.0
!                         Flow enhancement factor for shear
!                         (only for ENHMOD==4, 5)

    enh_shelf = 1.0
!                         Separate flow enhancement factor for floating ice
!                         (only for ENHMOD==1, 2, 3, 4 and MARGIN==3)


!-------- Basal hydrology --------

    basal_hydrology = 0
!                       0 : Water film thickness under grounded ice
!                           equal to zero everywhere
!                       1 : Water film thickness under grounded ice
!                           computed by flux routing scheme
!                       2 : Water film thickness under grounded ice computed by simple local water balance

    H_w_max = 2.    
!                       maximum thickness of the basal water layer, in m. Only for basal_hydrology==2

    mb_account = 1
!                         0 : No detailed mass balance accounting
!                         1 : Mass balance accounting by
!                             "hidden ablation scheme" (R. Calov, A. Robinson)

!-------- Basal melting at the marine ice front --------

    marine_ice_basal_melting = 1
!                        Basal melting rate at the marine ice front:
!                        1 : Computed by the usual energy jump condition
!                            for grounded ice
!                        2 : Prescribed by QBM_MARINE
!                        3 : Weighed average of grounded ice melting (computed)
!                            and marine ice melting (prescribed by QBM_MARINE)

    qbm_marine = 2.0    ! Basal melting rate at the marine ice front, in m/a water equiv. (for MARINE_ICE_BASAL_MELTING==2,3)

    qbm_min = 0.0
    qbm_max = 3.0
!                       Lower and upper limits of the basal melting and
!                       drainage rates Q_bm, Q_tld and Q_b_tot
!                       (in m/a water equiv.)

    z_abyss = -2500.0
!                       Threshold seabed elevation separating
!                       the continental shelf from the abyssal ocean, in m

    l_abyss = 2
!                       1: use relaxed bedrock separating of seabed and
!                          continental shelf
!                       2: use bedrock separating of seabed and
!                          continental shelf

!-------- Basal sliding --------

    slide_law = 2 
!                       1 : Weertman-type sliding,
!                           full ice pressure in denominator
!                       2 : Weertman-type sliding,
!                           reduced pressure (ice minus water) in denominator,
!                           limiter RED_PRES_LIMIT_FACT applied for SIA and SStA
!                       3 : Weertman-type sliding,
!                           reduced pressure (ice minus water) in denominator,
!                           limiter RED_PRES_LIMIT_FACT applied for SIA only
!                       4 : regularized Coulomb friction law, available only for dynamics==2 and hyb_mode==1
!                       5 : pseudo-plastic power-law friction law, available only for dynamics==2 and hyb_mode==1

    i_slide_rock_sed = 2
!                       separation of rock and sediment sliding:
!                       1 : based on discrete sediment mask derived using h_sed_thresh
!                       2 : continuous function of sediment thickness between h_sed_min and h_sed_max.
!                           implies same sliding law law for rock and sediments 
!                           (i.e. p/q_weert_sedi=p/q_weert)

    gamma_slide = 0.5    ! Sub-melt sliding coefficient, in K

    c_slide = 25.       ! Sliding coefficient over rock, in m/[a*Pa^(p-q)]

    p_weert = 3         ! Weertman exponent p for the basal shear stress (integer value)

    q_weert = 2         ! Weertman exponent q for the basal pressure (integer value)

    c_slide_sedi = 250.      ! Sliding coefficient over sediments, in m/[a*Pa^(p-q)]

    p_weert_sedi = 3         ! Weertman exponent p for the basal shear stress (integer value)

    q_weert_sedi = 2         ! Weertman exponent q for the basal pressure (integer value)

    enh_slide_marine_sed = 1.    ! factor by which to enhance sliding coefficient over marine sediments

    q_coulomb = 0.25         ! exponent in regularized Coulomb law (used only if slide_law==4,5)

    c_fric_rock = 0.2        ! friction coefficient over hard bedrock (used only if slide_law==4,5)

    c_fric_sed = 0.36        ! friction coefficient over soft sediments (used only if slide_law==4,5)

    vb_t_rock = 300.         ! m/a, threshold basal velocity for transition from Weertman to Coulomb over hard bedrock (used only if slide_law==4,5)

    vb_t_sed = 300.          ! m/a, threshold basal velocity for transition from Weertman to Coulomb over soft sediments (used only if slide_law==4,5)

    delta_rock = 0.4         ! Fraction of overburden pressure for saturated bedrock (used only if i_p_b_red>1)

    delta_sed = 0.03         ! Fraction of overburden pressure for saturated till (sediments) (used only if i_p_b_red>1)

    h_sed_thresh = 200. ! critical sediment thickness for rock/sediment mask (m) (only for i_slide_rock_sedi=1) 

    h_sed_min = 10.     ! sediment thickness below which rock is assumed (m) (only for i_slide_rock_sedi=2) 

    h_sed_max = 500.    ! sediment thickness above which sediment is assumed (m) (only for i_slide_rock_sedi=2) 

    nyears_ramp_up_slide = 0.
!                       Ramp-up time (in a) for basal sliding:
!                       Sliding starts gradually between the inital time and the initial time plus the ramp-up time.
!                       Set to 0.0 for immediate start of basal sliding (no gradual ramp-up).

    i_p_b_red = 1
!                       reduced basal pressure:
!                       1 : reduced below sea level, limited by red_pres_limit_fact
!                       2 : reduced to delta_rock/sed*overburden pressure where temperate base, overburden pressure elsewhere
!                       3 : reduced basal pressure = delta * overburden pressure (where temperate base) - water pressure below sea level 
!                       4 : basal water pressure computed from water content in the sediment (rock) + water pressure below sea level, 
!                           only available if basal_hydrology==2

    red_pres_limit_fact = 0.
!                       Limiter for the reduced pressure (ice minus water),
!                       ensures that the reduced pressure cannot become smaller
!                       than RED_PRES_LIMIT_FACT times the ice pressure
!                       (for SLIDE_LAW==2)

    hydro_slide_sat_fct = 0
!                       Saturation function for water-film-enhanced basal sliding
!                       (only for BASAL_HYDROLOGY==1):
!                       0 : Exponential function
!                           by Kleiner and Humbert (2014, J. Glaciol. 60)
!                       1 : Linear function
!                       2 : Cubic S-shape function
!                       3 : Quintic S-shape function

    c_hw_slide = 0.0        ! Coefficient for water-film-enhanced basal sliding (only for BASAL_HYDROLOGY==1)

    hw0_slide = 1.0e-03     ! Threshold water film thickness for water-film-enhanced basal sliding (in m, only for BASAL_HYDROLOGY==1)

    visc_min = 1.0e+10
    visc_max = 1.0e+25
!                       Lower and upper limits of the depth-averaged viscosity
!                       of the SS(t)A, vis_ave_g (in Pa s)

    visc_init_ssa = 1.0e+15
!                         Initial viscosity (in Pa s) for the iterations
!                         of the SSA/SStA
!                         (for DYNAMICS==1 and MARGIN==3, or for DYNAMICS==2).

    n_visc_smooth = 0
!                         Number of steps for the diffusive smoothing
!                         of the depth-averaged viscosity of the SSA/SStA
!                         (if negative, abs(N_VISC_SMOOTH) smoothing steps
!                         of the logarithm of the viscosity are carried out)
!                         (for DYNAMICS==1 and MARGIN==3, or for DYNAMICS==2).

    visc_smooth_diff = 0.0
!                         Dimensionless diffusivity for the diffusive smoothing
!                         of the depth-averaged viscosity of the SSA/SStA
!                         (for DYNAMICS==1 and MARGIN==3, or for DYNAMICS==2).


!-------- Advection treatment in the temperature and age equations --------

    adv_hor = 3
!                         Discretization of horizontal advection terms in the
!                         3-d temperature and age equations:
!                         1 : Not defined
!                             (central differences would be unstable!)
!                         2 : First-order upstream using
!                             velocities on the staggered grid
!                         3 : First-order upstream using
!                             interpolated velocities on the main grid

    adv_vert = 3
!                         Discretization of vertical advection terms in the
!                         3-d temperature and age equations:
!                         1 : Central differences (plus artificial diffusion
!                             for the age equation)
!                         2 : First-order upstream using
!                             advection terms on the staggered grid
!                         3 : First-order upstream using
!                             interpolated advection terms on the main grid


!-------- Limiters etc. --------

    hd_min = 0.0
    hd_max = 500.
!                       Lower and upper limits of the SIA free-surface
!                       diffusivity hdiff (in m^2/s)

    vh_max = 3.0e+03          ! Lower (-VH_MAX) and upper (+VH_MAX) limits of horizontal velocities vx_c/t, vy_c/t (in m/a)


    numdiff_h_t = 0.0
!                       Spatial smoothing parameter for computation
!                       of H_t

    tau_cts = 0.0
!                       Numerical time lag (in a) for evolution
!                       of H_t

    agediff = 5.0e-08
!                       Numerical age diffusivity
!                       (in m2/s, only for ADV_VERT==1)

    age_min = 0.0
    age_max = 1.0e06
!                       Lower and upper limits of computed ages (in a)

!                       Parameterisation for ice spread in alpine regions
    l_alpine = T        

    l_exclude_grl = F

    h_isol_max = 1000.0
!                             Maximum thickness of isolated ice points (in m) 
!                             (if set to 0.0d0, isolated ice points are killed). 


    l_write_timer = F             ! write simulation times of the different atm model components to standard output?

    l_output_3d = F     ! write 3d output?
/
